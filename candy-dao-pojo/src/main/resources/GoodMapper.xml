<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huanxi.dao.GoodMapper">
  <resultMap id="BaseResultMap" type="com.huanxi.pojo.Good">
    <id column="good_id" jdbcType="INTEGER" property="goodId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="good_type_id" jdbcType="INTEGER" property="goodTypeId" />
    <result column="good_order_id" jdbcType="INTEGER" property="goodOrderId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="count" jdbcType="DECIMAL" property="count" />
    <result column="goods_type" jdbcType="SMALLINT" property="goodsType" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="original_price" jdbcType="REAL" property="originalPrice" />
    <result column="price" jdbcType="REAL" property="price" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="img_src" jdbcType="VARCHAR" property="imgSrc" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.huanxi.pojo.Good">
    <result column="good_desc" jdbcType="LONGVARCHAR" property="goodDesc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    good_id, user_id, good_type_id, good_order_id, title, create_time, count, goods_type, 
    status, original_price, price, remark, img_src
  </sql>
  <sql id="Blob_Column_List">
    good_desc
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.huanxi.pojo.GoodExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from good
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.huanxi.pojo.GoodExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from good
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from good
    where good_id = #{goodId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from good
    where good_id = #{goodId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.huanxi.pojo.GoodExample">
    delete from good
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.huanxi.pojo.Good">
    insert into good (good_id, user_id, good_type_id, 
      good_order_id, title, create_time, 
      count, goods_type, status, 
      original_price, price, remark, 
      img_src, good_desc)
    values (#{goodId,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, #{goodTypeId,jdbcType=INTEGER}, 
      #{goodOrderId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, 
      #{count,jdbcType=DECIMAL}, #{goodsType,jdbcType=SMALLINT}, #{status,jdbcType=VARCHAR}, 
      #{originalPrice,jdbcType=REAL}, #{price,jdbcType=REAL}, #{remark,jdbcType=VARCHAR}, 
      #{imgSrc,jdbcType=VARCHAR}, #{goodDesc,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.huanxi.pojo.Good">
    insert into good
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodId != null">
        good_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="goodTypeId != null">
        good_type_id,
      </if>
      <if test="goodOrderId != null">
        good_order_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="goodsType != null">
        goods_type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="originalPrice != null">
        original_price,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="imgSrc != null">
        img_src,
      </if>
      <if test="goodDesc != null">
        good_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodId != null">
        #{goodId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="goodTypeId != null">
        #{goodTypeId,jdbcType=INTEGER},
      </if>
      <if test="goodOrderId != null">
        #{goodOrderId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="count != null">
        #{count,jdbcType=DECIMAL},
      </if>
      <if test="goodsType != null">
        #{goodsType,jdbcType=SMALLINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="originalPrice != null">
        #{originalPrice,jdbcType=REAL},
      </if>
      <if test="price != null">
        #{price,jdbcType=REAL},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="imgSrc != null">
        #{imgSrc,jdbcType=VARCHAR},
      </if>
      <if test="goodDesc != null">
        #{goodDesc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.huanxi.pojo.GoodExample" resultType="java.lang.Long">
    select count(*) from good
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update good
    <set>
      <if test="record.goodId != null">
        good_id = #{record.goodId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.goodTypeId != null">
        good_type_id = #{record.goodTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.goodOrderId != null">
        good_order_id = #{record.goodOrderId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=DECIMAL},
      </if>
      <if test="record.goodsType != null">
        goods_type = #{record.goodsType,jdbcType=SMALLINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.originalPrice != null">
        original_price = #{record.originalPrice,jdbcType=REAL},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=REAL},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.imgSrc != null">
        img_src = #{record.imgSrc,jdbcType=VARCHAR},
      </if>
      <if test="record.goodDesc != null">
        good_desc = #{record.goodDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update good
    set good_id = #{record.goodId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=BIGINT},
      good_type_id = #{record.goodTypeId,jdbcType=INTEGER},
      good_order_id = #{record.goodOrderId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      count = #{record.count,jdbcType=DECIMAL},
      goods_type = #{record.goodsType,jdbcType=SMALLINT},
      status = #{record.status,jdbcType=VARCHAR},
      original_price = #{record.originalPrice,jdbcType=REAL},
      price = #{record.price,jdbcType=REAL},
      remark = #{record.remark,jdbcType=VARCHAR},
      img_src = #{record.imgSrc,jdbcType=VARCHAR},
      good_desc = #{record.goodDesc,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update good
    set good_id = #{record.goodId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=BIGINT},
      good_type_id = #{record.goodTypeId,jdbcType=INTEGER},
      good_order_id = #{record.goodOrderId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      count = #{record.count,jdbcType=DECIMAL},
      goods_type = #{record.goodsType,jdbcType=SMALLINT},
      status = #{record.status,jdbcType=VARCHAR},
      original_price = #{record.originalPrice,jdbcType=REAL},
      price = #{record.price,jdbcType=REAL},
      remark = #{record.remark,jdbcType=VARCHAR},
      img_src = #{record.imgSrc,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.huanxi.pojo.Good">
    update good
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="goodTypeId != null">
        good_type_id = #{goodTypeId,jdbcType=INTEGER},
      </if>
      <if test="goodOrderId != null">
        good_order_id = #{goodOrderId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=DECIMAL},
      </if>
      <if test="goodsType != null">
        goods_type = #{goodsType,jdbcType=SMALLINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="originalPrice != null">
        original_price = #{originalPrice,jdbcType=REAL},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=REAL},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="imgSrc != null">
        img_src = #{imgSrc,jdbcType=VARCHAR},
      </if>
      <if test="goodDesc != null">
        good_desc = #{goodDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where good_id = #{goodId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.huanxi.pojo.Good">
    update good
    set user_id = #{userId,jdbcType=BIGINT},
      good_type_id = #{goodTypeId,jdbcType=INTEGER},
      good_order_id = #{goodOrderId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      count = #{count,jdbcType=DECIMAL},
      goods_type = #{goodsType,jdbcType=SMALLINT},
      status = #{status,jdbcType=VARCHAR},
      original_price = #{originalPrice,jdbcType=REAL},
      price = #{price,jdbcType=REAL},
      remark = #{remark,jdbcType=VARCHAR},
      img_src = #{imgSrc,jdbcType=VARCHAR},
      good_desc = #{goodDesc,jdbcType=LONGVARCHAR}
    where good_id = #{goodId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huanxi.pojo.Good">
    update good
    set user_id = #{userId,jdbcType=BIGINT},
      good_type_id = #{goodTypeId,jdbcType=INTEGER},
      good_order_id = #{goodOrderId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      count = #{count,jdbcType=DECIMAL},
      goods_type = #{goodsType,jdbcType=SMALLINT},
      status = #{status,jdbcType=VARCHAR},
      original_price = #{originalPrice,jdbcType=REAL},
      price = #{price,jdbcType=REAL},
      remark = #{remark,jdbcType=VARCHAR},
      img_src = #{imgSrc,jdbcType=VARCHAR}
    where good_id = #{goodId,jdbcType=INTEGER}
  </update>
</mapper>